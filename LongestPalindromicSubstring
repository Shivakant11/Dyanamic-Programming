import numpy as np
class Solution(object):
    def longestPalindrome(self, s):
        """
        :type s: str
        :rtype: str
        """
        a = len(s)*[0]
        a[0] = 1
        for i in range(1, len(s)):
            if i-1-a[i-1] >= 0 and s[i-1-a[i-1]] == s[i]:
                a[i] = a[i-1] + 2
            else:
                temp = 0
                curlen = 0
                for j in range(0, i):
                    if j<i-curlen and s[j] == s[i-curlen]:
                        curlen += 1
                    elif j<i-curlen and not s[j] == s[i-curlen]:
                        temp = j+1
                        curlen = 0
                    elif j == i-curlen:
                        break
                a[i] = i-temp+1
        end = np.argmax(a)
        start = end-a[end]+1
        return s[start:end+1]
